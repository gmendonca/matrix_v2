// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "metazht.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Value_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_metazht_2eproto() {
  protobuf_AddDesc_metazht_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "metazht.proto");
  GOOGLE_CHECK(file != NULL);
  Value_descriptor_ = file->message_type(0);
  static const int Value_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, parents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, indegree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, children_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, datanamelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, datasize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, alldatasize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, nummove_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, history_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, submittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, arrivetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, rqueuedtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, exetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, fintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numtaskfin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numtaskwait_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numtaskready_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numcoreavilable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numallcore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numworksteal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, numworkstealfail_),
  };
  Value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Value_descriptor_,
      Value::default_instance_,
      Value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Value));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_metazht_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Value_descriptor_, &Value::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_metazht_2eproto() {
  delete Value::default_instance_;
  delete Value_reflection_;
}

void protobuf_AddDesc_metazht_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmetazht.proto\"\242\003\n\005Value\022\n\n\002id\030\001 \002(\t\022\017\n"
    "\007parents\030\002 \003(\t\022\020\n\010indegree\030\003 \001(\003\022\020\n\010chil"
    "dren\030\004 \003(\t\022\024\n\014dataNameList\030\005 \003(\t\022\020\n\010data"
    "Size\030\006 \003(\003\022\023\n\013allDataSize\030\007 \001(\003\022\017\n\007numMo"
    "ve\030\010 \001(\005\022\017\n\007history\030\t \001(\t\022\022\n\nsubmitTime\030"
    "\n \001(\001\022\022\n\narriveTime\030\013 \001(\001\022\023\n\013rqueuedTime"
    "\030\014 \001(\001\022\017\n\007exeTime\030\r \001(\001\022\017\n\007finTime\030\016 \001(\001"
    "\022\022\n\nnumTaskFin\030\017 \001(\003\022\023\n\013numTaskWait\030\020 \001("
    "\005\022\024\n\014numTaskReady\030\021 \001(\005\022\027\n\017numCoreAvilab"
    "le\030\022 \001(\005\022\022\n\nnumAllCore\030\023 \001(\005\022\024\n\014numWorkS"
    "teal\030\024 \001(\003\022\030\n\020numWorkStealFail\030\025 \001(\003", 436);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metazht.proto", &protobuf_RegisterTypes);
  Value::default_instance_ = new Value();
  Value::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_metazht_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_metazht_2eproto {
  StaticDescriptorInitializer_metazht_2eproto() {
    protobuf_AddDesc_metazht_2eproto();
  }
} static_descriptor_initializer_metazht_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Value::kIdFieldNumber;
const int Value::kParentsFieldNumber;
const int Value::kIndegreeFieldNumber;
const int Value::kChildrenFieldNumber;
const int Value::kDataNameListFieldNumber;
const int Value::kDataSizeFieldNumber;
const int Value::kAllDataSizeFieldNumber;
const int Value::kNumMoveFieldNumber;
const int Value::kHistoryFieldNumber;
const int Value::kSubmitTimeFieldNumber;
const int Value::kArriveTimeFieldNumber;
const int Value::kRqueuedTimeFieldNumber;
const int Value::kExeTimeFieldNumber;
const int Value::kFinTimeFieldNumber;
const int Value::kNumTaskFinFieldNumber;
const int Value::kNumTaskWaitFieldNumber;
const int Value::kNumTaskReadyFieldNumber;
const int Value::kNumCoreAvilableFieldNumber;
const int Value::kNumAllCoreFieldNumber;
const int Value::kNumWorkStealFieldNumber;
const int Value::kNumWorkStealFailFieldNumber;
#endif  // !_MSC_VER

Value::Value()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Value::InitAsDefaultInstance() {
}

Value::Value(const Value& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Value::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  indegree_ = GOOGLE_LONGLONG(0);
  alldatasize_ = GOOGLE_LONGLONG(0);
  nummove_ = 0;
  history_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  submittime_ = 0;
  arrivetime_ = 0;
  rqueuedtime_ = 0;
  exetime_ = 0;
  fintime_ = 0;
  numtaskfin_ = GOOGLE_LONGLONG(0);
  numtaskwait_ = 0;
  numtaskready_ = 0;
  numcoreavilable_ = 0;
  numallcore_ = 0;
  numworksteal_ = GOOGLE_LONGLONG(0);
  numworkstealfail_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Value::~Value() {
  SharedDtor();
}

void Value::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (history_ != &::google::protobuf::internal::kEmptyString) {
    delete history_;
  }
  if (this != default_instance_) {
  }
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Value_descriptor_;
}

const Value& Value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_metazht_2eproto();  return *default_instance_;
}

Value* Value::default_instance_ = NULL;

Value* Value::New() const {
  return new Value;
}

void Value::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    indegree_ = GOOGLE_LONGLONG(0);
    alldatasize_ = GOOGLE_LONGLONG(0);
    nummove_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_history()) {
      if (history_ != &::google::protobuf::internal::kEmptyString) {
        history_->clear();
      }
    }
    submittime_ = 0;
    arrivetime_ = 0;
    rqueuedtime_ = 0;
    exetime_ = 0;
    fintime_ = 0;
    numtaskfin_ = GOOGLE_LONGLONG(0);
    numtaskwait_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    numtaskready_ = 0;
    numcoreavilable_ = 0;
    numallcore_ = 0;
    numworksteal_ = GOOGLE_LONGLONG(0);
    numworkstealfail_ = GOOGLE_LONGLONG(0);
  }
  parents_.Clear();
  children_.Clear();
  datanamelist_.Clear();
  datasize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parents;
        break;
      }
      
      // repeated string parents = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_parents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->parents(0).data(), this->parents(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parents;
        if (input->ExpectTag(24)) goto parse_indegree;
        break;
      }
      
      // optional int64 indegree = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_indegree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &indegree_)));
          set_has_indegree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_children;
        break;
      }
      
      // repeated string children = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_children:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_children()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->children(0).data(), this->children(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_children;
        if (input->ExpectTag(42)) goto parse_dataNameList;
        break;
      }
      
      // repeated string dataNameList = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dataNameList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_datanamelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->datanamelist(0).data(), this->datanamelist(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_dataNameList;
        if (input->ExpectTag(48)) goto parse_dataSize;
        break;
      }
      
      // repeated int64 dataSize = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dataSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48, input, this->mutable_datasize())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_datasize())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_dataSize;
        if (input->ExpectTag(56)) goto parse_allDataSize;
        break;
      }
      
      // optional int64 allDataSize = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_allDataSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alldatasize_)));
          set_has_alldatasize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_numMove;
        break;
      }
      
      // optional int32 numMove = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numMove:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nummove_)));
          set_has_nummove();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_history;
        break;
      }
      
      // optional string history = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_history:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->history().data(), this->history().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_submitTime;
        break;
      }
      
      // optional double submitTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_submitTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &submittime_)));
          set_has_submittime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_arriveTime;
        break;
      }
      
      // optional double arriveTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_arriveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arrivetime_)));
          set_has_arrivetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(97)) goto parse_rqueuedTime;
        break;
      }
      
      // optional double rqueuedTime = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_rqueuedTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rqueuedtime_)));
          set_has_rqueuedtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(105)) goto parse_exeTime;
        break;
      }
      
      // optional double exeTime = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_exeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exetime_)));
          set_has_exetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(113)) goto parse_finTime;
        break;
      }
      
      // optional double finTime = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_finTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fintime_)));
          set_has_fintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_numTaskFin;
        break;
      }
      
      // optional int64 numTaskFin = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numTaskFin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &numtaskfin_)));
          set_has_numtaskfin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_numTaskWait;
        break;
      }
      
      // optional int32 numTaskWait = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numTaskWait:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtaskwait_)));
          set_has_numtaskwait();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_numTaskReady;
        break;
      }
      
      // optional int32 numTaskReady = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numTaskReady:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtaskready_)));
          set_has_numtaskready();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_numCoreAvilable;
        break;
      }
      
      // optional int32 numCoreAvilable = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numCoreAvilable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numcoreavilable_)));
          set_has_numcoreavilable();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_numAllCore;
        break;
      }
      
      // optional int32 numAllCore = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numAllCore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numallcore_)));
          set_has_numallcore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_numWorkSteal;
        break;
      }
      
      // optional int64 numWorkSteal = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numWorkSteal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &numworksteal_)));
          set_has_numworksteal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_numWorkStealFail;
        break;
      }
      
      // optional int64 numWorkStealFail = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_numWorkStealFail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &numworkstealfail_)));
          set_has_numworkstealfail();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }
  
  // repeated string parents = 2;
  for (int i = 0; i < this->parents_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->parents(i).data(), this->parents(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->parents(i), output);
  }
  
  // optional int64 indegree = 3;
  if (has_indegree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->indegree(), output);
  }
  
  // repeated string children = 4;
  for (int i = 0; i < this->children_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->children(i).data(), this->children(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->children(i), output);
  }
  
  // repeated string dataNameList = 5;
  for (int i = 0; i < this->datanamelist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->datanamelist(i).data(), this->datanamelist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->datanamelist(i), output);
  }
  
  // repeated int64 dataSize = 6;
  for (int i = 0; i < this->datasize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->datasize(i), output);
  }
  
  // optional int64 allDataSize = 7;
  if (has_alldatasize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->alldatasize(), output);
  }
  
  // optional int32 numMove = 8;
  if (has_nummove()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nummove(), output);
  }
  
  // optional string history = 9;
  if (has_history()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->history().data(), this->history().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->history(), output);
  }
  
  // optional double submitTime = 10;
  if (has_submittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->submittime(), output);
  }
  
  // optional double arriveTime = 11;
  if (has_arrivetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->arrivetime(), output);
  }
  
  // optional double rqueuedTime = 12;
  if (has_rqueuedtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->rqueuedtime(), output);
  }
  
  // optional double exeTime = 13;
  if (has_exetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->exetime(), output);
  }
  
  // optional double finTime = 14;
  if (has_fintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->fintime(), output);
  }
  
  // optional int64 numTaskFin = 15;
  if (has_numtaskfin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->numtaskfin(), output);
  }
  
  // optional int32 numTaskWait = 16;
  if (has_numtaskwait()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->numtaskwait(), output);
  }
  
  // optional int32 numTaskReady = 17;
  if (has_numtaskready()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->numtaskready(), output);
  }
  
  // optional int32 numCoreAvilable = 18;
  if (has_numcoreavilable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->numcoreavilable(), output);
  }
  
  // optional int32 numAllCore = 19;
  if (has_numallcore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->numallcore(), output);
  }
  
  // optional int64 numWorkSteal = 20;
  if (has_numworksteal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->numworksteal(), output);
  }
  
  // optional int64 numWorkStealFail = 21;
  if (has_numworkstealfail()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->numworkstealfail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }
  
  // repeated string parents = 2;
  for (int i = 0; i < this->parents_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->parents(i).data(), this->parents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->parents(i), target);
  }
  
  // optional int64 indegree = 3;
  if (has_indegree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->indegree(), target);
  }
  
  // repeated string children = 4;
  for (int i = 0; i < this->children_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->children(i).data(), this->children(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->children(i), target);
  }
  
  // repeated string dataNameList = 5;
  for (int i = 0; i < this->datanamelist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->datanamelist(i).data(), this->datanamelist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->datanamelist(i), target);
  }
  
  // repeated int64 dataSize = 6;
  for (int i = 0; i < this->datasize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(6, this->datasize(i), target);
  }
  
  // optional int64 allDataSize = 7;
  if (has_alldatasize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->alldatasize(), target);
  }
  
  // optional int32 numMove = 8;
  if (has_nummove()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nummove(), target);
  }
  
  // optional string history = 9;
  if (has_history()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->history().data(), this->history().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->history(), target);
  }
  
  // optional double submitTime = 10;
  if (has_submittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->submittime(), target);
  }
  
  // optional double arriveTime = 11;
  if (has_arrivetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->arrivetime(), target);
  }
  
  // optional double rqueuedTime = 12;
  if (has_rqueuedtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->rqueuedtime(), target);
  }
  
  // optional double exeTime = 13;
  if (has_exetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->exetime(), target);
  }
  
  // optional double finTime = 14;
  if (has_fintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->fintime(), target);
  }
  
  // optional int64 numTaskFin = 15;
  if (has_numtaskfin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->numtaskfin(), target);
  }
  
  // optional int32 numTaskWait = 16;
  if (has_numtaskwait()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->numtaskwait(), target);
  }
  
  // optional int32 numTaskReady = 17;
  if (has_numtaskready()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->numtaskready(), target);
  }
  
  // optional int32 numCoreAvilable = 18;
  if (has_numcoreavilable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->numcoreavilable(), target);
  }
  
  // optional int32 numAllCore = 19;
  if (has_numallcore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->numallcore(), target);
  }
  
  // optional int64 numWorkSteal = 20;
  if (has_numworksteal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->numworksteal(), target);
  }
  
  // optional int64 numWorkStealFail = 21;
  if (has_numworkstealfail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->numworkstealfail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Value::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }
    
    // optional int64 indegree = 3;
    if (has_indegree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->indegree());
    }
    
    // optional int64 allDataSize = 7;
    if (has_alldatasize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alldatasize());
    }
    
    // optional int32 numMove = 8;
    if (has_nummove()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nummove());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string history = 9;
    if (has_history()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history());
    }
    
    // optional double submitTime = 10;
    if (has_submittime()) {
      total_size += 1 + 8;
    }
    
    // optional double arriveTime = 11;
    if (has_arrivetime()) {
      total_size += 1 + 8;
    }
    
    // optional double rqueuedTime = 12;
    if (has_rqueuedtime()) {
      total_size += 1 + 8;
    }
    
    // optional double exeTime = 13;
    if (has_exetime()) {
      total_size += 1 + 8;
    }
    
    // optional double finTime = 14;
    if (has_fintime()) {
      total_size += 1 + 8;
    }
    
    // optional int64 numTaskFin = 15;
    if (has_numtaskfin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->numtaskfin());
    }
    
    // optional int32 numTaskWait = 16;
    if (has_numtaskwait()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numtaskwait());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 numTaskReady = 17;
    if (has_numtaskready()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numtaskready());
    }
    
    // optional int32 numCoreAvilable = 18;
    if (has_numcoreavilable()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numcoreavilable());
    }
    
    // optional int32 numAllCore = 19;
    if (has_numallcore()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numallcore());
    }
    
    // optional int64 numWorkSteal = 20;
    if (has_numworksteal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->numworksteal());
    }
    
    // optional int64 numWorkStealFail = 21;
    if (has_numworkstealfail()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->numworkstealfail());
    }
    
  }
  // repeated string parents = 2;
  total_size += 1 * this->parents_size();
  for (int i = 0; i < this->parents_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->parents(i));
  }
  
  // repeated string children = 4;
  total_size += 1 * this->children_size();
  for (int i = 0; i < this->children_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->children(i));
  }
  
  // repeated string dataNameList = 5;
  total_size += 1 * this->datanamelist_size();
  for (int i = 0; i < this->datanamelist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->datanamelist(i));
  }
  
  // repeated int64 dataSize = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->datasize_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->datasize(i));
    }
    total_size += 1 * this->datasize_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
  GOOGLE_CHECK_NE(&from, this);
  parents_.MergeFrom(from.parents_);
  children_.MergeFrom(from.children_);
  datanamelist_.MergeFrom(from.datanamelist_);
  datasize_.MergeFrom(from.datasize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_indegree()) {
      set_indegree(from.indegree());
    }
    if (from.has_alldatasize()) {
      set_alldatasize(from.alldatasize());
    }
    if (from.has_nummove()) {
      set_nummove(from.nummove());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_history()) {
      set_history(from.history());
    }
    if (from.has_submittime()) {
      set_submittime(from.submittime());
    }
    if (from.has_arrivetime()) {
      set_arrivetime(from.arrivetime());
    }
    if (from.has_rqueuedtime()) {
      set_rqueuedtime(from.rqueuedtime());
    }
    if (from.has_exetime()) {
      set_exetime(from.exetime());
    }
    if (from.has_fintime()) {
      set_fintime(from.fintime());
    }
    if (from.has_numtaskfin()) {
      set_numtaskfin(from.numtaskfin());
    }
    if (from.has_numtaskwait()) {
      set_numtaskwait(from.numtaskwait());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_numtaskready()) {
      set_numtaskready(from.numtaskready());
    }
    if (from.has_numcoreavilable()) {
      set_numcoreavilable(from.numcoreavilable());
    }
    if (from.has_numallcore()) {
      set_numallcore(from.numallcore());
    }
    if (from.has_numworksteal()) {
      set_numworksteal(from.numworksteal());
    }
    if (from.has_numworkstealfail()) {
      set_numworkstealfail(from.numworkstealfail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Value::Swap(Value* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    parents_.Swap(&other->parents_);
    std::swap(indegree_, other->indegree_);
    children_.Swap(&other->children_);
    datanamelist_.Swap(&other->datanamelist_);
    datasize_.Swap(&other->datasize_);
    std::swap(alldatasize_, other->alldatasize_);
    std::swap(nummove_, other->nummove_);
    std::swap(history_, other->history_);
    std::swap(submittime_, other->submittime_);
    std::swap(arrivetime_, other->arrivetime_);
    std::swap(rqueuedtime_, other->rqueuedtime_);
    std::swap(exetime_, other->exetime_);
    std::swap(fintime_, other->fintime_);
    std::swap(numtaskfin_, other->numtaskfin_);
    std::swap(numtaskwait_, other->numtaskwait_);
    std::swap(numtaskready_, other->numtaskready_);
    std::swap(numcoreavilable_, other->numcoreavilable_);
    std::swap(numallcore_, other->numallcore_);
    std::swap(numworksteal_, other->numworksteal_);
    std::swap(numworkstealfail_, other->numworkstealfail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Value_descriptor_;
  metadata.reflection = Value_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
